=encoding utf8

=head1 名前

Mojolicious::Guides - The Mojolicious Guide to the Galaxy

=head1 DON'T PANIC!

The [[Mojolicious|https://mojolicious.org]] documentation is structured into
three parts. The [[/"TUTORIAL"]] everyone starts with, the [[/"GUIDES"]] that
explain all major features in detail, and the class [[/"REFERENCE"]] listing
all available APIs.

Some parts of the documentation only use the [[Mojolicious::Lite]] micro web
framework for examples, but that's merely a convenience for the reader. Almost
all features are exactly the same for full [[Mojolicious]] applications.

=head1 BASICS

=over 2

=item Learning Perl

If you are new to Perl, we recommend
[[Learn Perl in 2 hours 30 minutes|http://qntm.org/files/perl/perl.html]] for a
quick introduction, or the
[[Modern Perl book|https://pragprog.com/book/swperl/modern-perl-fourth-edition]],
freely available in many formats. Both are excellent introductions to the
language. For more books and documentation, check out
[[learn.perl.org|http://learn.perl.org/]].

=item Learning Web Technologies

All web development starts with HTML, CSS and JavaScript, to learn the basics
we recommend the
[[Mozilla Developer Network|https://developer.mozilla.org/en-US/docs/Web]]. And
if you want to know more about how browsers and web servers actually
communicate, there's also a very nice introduction to
[[HTTP|https://developer.mozilla.org/en-US/docs/Web/HTTP]].

=back

=head1 CONVENTIONS

=over 2

=item Modern Perl

[[Mojolicious]] uses a modern subset of Perl exclusively, and therefore all
documentation assumes that [[strict]], [[warnings]], [[utf8]] and Perl 5.10
[[features|feature]] are enabled, even if examples don't specifically mention it.

  use strict;
  use warnings;
  use utf8;
  use feature ':5.10';

Some modules, like [[Mojo::Base]] and [[Mojolicious::Lite]], will enable them for
you automatically, whenever they are used.

=item Variable names

For brevity and clarity, example variables will reflect the type of data the API
uses. For instance, C<$bytes> or C<$chars> to distinguish whether it is encoded
bytes or decoded characters in a Perl [[string|perlunifaq]], C<$bool> if the
value just indicates true or false, C<$c> to denote a [[Mojolicious::Controller>
object, or C<$app> to denote the [[application|Mojolicious> object.

=back

=head1 チュートリアル

=over 2

=item [[Mojolicious::Guides::Tutorial]]

A fast and fun way to get started developing web applications with
[[Mojolicious]]. The tutorial introduces the [[Mojolicious::Lite]] micro web
framework, which is only a thin wrapper around the full web framework. The
simplified notation introduced in the tutorial is commonly used throughout the
guides and is therefore considered a prerequisite, you should definitely take a
look!

=back

=head1 GUIDES

=over 2

=item [[Mojolicious::Guides::Growing]]

Starting a [[Mojolicious::Lite]] prototype from scratch and growing it into a
well-structured [[Mojolicious]] application.

=item [[Mojolicious::Guides::Routing]]

Simple and fun introduction to the [[Mojolicious]] router.

=item [[Mojolicious::Guides::Rendering]]

Generating content with the [[Mojolicious]] renderer.

=item [[Mojolicious::Guides::Testing]]

Powerful yet elegant testing techniques and tools for [[Mojolicious]] and other
web applications.

=item [[Mojolicious::Guides::Cookbook]]

Cooking with [[Mojolicious]], recipes for every taste.

=item [[Mojolicious::Guides::Contributing]]

Become a part of the ongoing [[Mojolicious]] development.

=item [[Mojolicious::Guides::FAQ]]

Answers to the most frequently asked questions.

=back

=head1 HIGHLIGHTS

[[Mojolicious]] and [[Mojolicious::Lite]] are the sum of many parts, built on top
of the [[Mojo]] web development toolkit. Small building blocks that can be used
independently for all kinds of applications, these are the most prominent ones.

=over 2

=item [[Mojo::UserAgent]]

Full featured non-blocking I/O HTTP and WebSocket user agent.

=item [[Mojo::DOM]]

Very fun and minimalistic HTML/XML DOM parser with CSS selector support.

=item [[Mojo::JSON]]

Minimalistic JSON implementation that just works.

=item [[Mojo::Server::Daemon]]

Full featured, highly portable non-blocking I/O HTTP and WebSocket server, with
self-restart support through [[Mojo::Server::Morbo]], perfect for development
and testing.

=item [[Mojo::Server::Prefork]]

Full featured, UNIX optimized, preforking non-blocking I/O HTTP and WebSocket
server with support for zero downtime software upgrades (hot deployment)
through [[Mojo::Server::Hypnotoad]].

=item [[Mojo::Server::CGI]], [[Mojo::Server::PSGI]]

Transparent CGI and [[PSGI]] support out of the box.

=item [[Mojo::IOLoop]]

A minimalistic event loop with support for multiple reactor backends.

=item [[Mojo::Template]]

Very Perl-ish and minimalistic template system.

=item [[Test::Mojo]]

Testing toolkit for web applications.

=item [[ojo]]

Fun one-liners using everything above.

=back

=head1 SPIN-OFFS

These modules are not part of the [[Mojolicious]] distribution, but have been
designed to be used with it and are being developed under the same umbrella.

=over 2

=item [[Mojo::Pg]]

A tiny wrapper around [[DBD::Pg]] that makes
[[PostgreSQL|http://www.postgresql.org]] a lot of fun to use with
[[Mojolicious]]. Perform queries blocking and non-blocking, use all
[[SQL features|https://www.postgresql.org/docs/current/static/sql.html]]
PostgreSQL has to offer, generate CRUD queries from data structures, manage your
database schema with migrations and build scalable real-time web applications
with the publish/subscribe pattern.

B<Examples:> The minimal
[[chat|https://github.com/mojolicious/mojo-pg/tree/master/examples/chat.pl]]
application will show you how to scale WebSockets to multiple servers, and the
well-structured
[[blog|https://github.com/mojolicious/mojo-pg/tree/master/examples/blog]] 
application how to apply the MVC design pattern in practice.

=item [[Minion]]

A full featured job queue for [[Mojolicious]] with support for multiple backends
(such as [[PostgreSQL|http://www.postgresql.org]]). Job queues allow you to
process time and/or computationally intensive tasks in background processes,
outside of the request/response lifecycle. Among those tasks you'll commonly
find image resizing, spam filtering, HTTP downloads, building tarballs, warming
caches and basically everything else you can imagine that's not super fast.

B<Examples:> The
L<link
checker|https://github.com/mojolicious/minion/tree/master/examples/linkcheck>
will show you how to integrate background jobs into well-structured
[[Mojolicious]] applications.

=back

=head1 REFERENCE

This is the class hierarchy of the [[Mojolicious]] distribution.

=over 2

=item * [[Mojo]]

=item * [[Mojo::Base]]

=over 2

=item * [[Mojolicious]]

=over 2

=item * [[Mojo::HelloWorld]]

=item * [[Mojolicious::Lite]]

=back

=item * [[Mojo::Cache]]

=item * [[Mojo::Cookie]]

=over 2

=item * [[Mojo::Cookie::Request]]

=item * [[Mojo::Cookie::Response]]

=back

=item * [[Mojo::DOM::CSS]]

=item * [[Mojo::DOM::HTML]]

=item * [[Mojo::Date]]

=item * [[Mojo::EventEmitter]]

=over 2

=item * [[Mojo::Asset]]

=over 2

=item * [[Mojo::Asset::File]]

=item * [[Mojo::Asset::Memory]]

=back

=item * [[Mojo::Content]]

=over 2

=item * [[Mojo::Content::MultiPart]]

=item * [[Mojo::Content::Single]]

=back

=item * [[Mojo::IOLoop]]

=item * [[Mojo::IOLoop::Client]]

=item * [[Mojo::IOLoop::Server]]

=item * [[Mojo::IOLoop::Stream]]

=item * [[Mojo::IOLoop::Subprocess]]

=item * [[Mojo::IOLoop::TLS]]

=item * [[Mojo::Log]]

=item * [[Mojo::Message]]

=over 2

=item * [[Mojo::Message::Request]]

=item * [[Mojo::Message::Response]]

=back

=item * [[Mojo::Reactor]]

=over 2

=item * [[Mojo::Reactor::Poll]]

=over 2

=item * [[Mojo::Reactor::EV]]

=back

=back

=item * [[Mojo::Server]]

=over 2

=item * [[Mojo::Server::CGI]]

=item * [[Mojo::Server::Daemon]]

=over 2

=item * [[Mojo::Server::Prefork]]

=back

=item * [[Mojo::Server::PSGI]]

=back

=item * [[Mojo::Transaction]]

=over 2

=item * [[Mojo::Transaction::HTTP]]

=item * [[Mojo::Transaction::WebSocket]]

=back

=item * [[Mojo::UserAgent]]

=item * [[Mojolicious::Plugins]]

=back

=item * [[Mojo::Exception]]

=item * [[Mojo::Headers]]

=item * [[Mojo::JSON::Pointer]]

=item * [[Mojo::Parameters]]

=item * [[Mojo::Path]]

=item * [[Mojo::Promise]]

=over 2

=item * [[Mojo::IOLoop::Delay]]

=back

=item * [[Mojo::Server::Hypnotoad]]

=item * [[Mojo::Server::Morbo]]

=item * [[Mojo::Server::Morbo::Backend]]

=over 2

=item * [[Mojo::Server::Morbo::Backend::Poll]]

=back

=item * [[Mojo::Template]]

=item * [[Mojo::URL]]

=item * [[Mojo::Upload]]

=item * [[Mojo::UserAgent::CookieJar]]

=item * [[Mojo::UserAgent::Proxy]]

=item * [[Mojo::UserAgent::Server]]

=item * [[Mojo::UserAgent::Transactor]]

=item * [[Mojolicious::Command]]

=over 2

=item * [[Mojolicious::Command::cgi]]

=item * [[Mojolicious::Command::daemon]]

=item * [[Mojolicious::Command::eval]]

=item * [[Mojolicious::Command::get]]

=item * [[Mojolicious::Command::prefork]]

=item * [[Mojolicious::Command::psgi]]

=item * [[Mojolicious::Command::routes]]

=item * [[Mojolicious::Command::version]]

=item * [[Mojolicious::Command::Author::cpanify]]

=item * [[Mojolicious::Command::Author::generate::app]]

=item * [[Mojolicious::Command::Author::generate::lite_app]]

=item * [[Mojolicious::Command::Author::generate::makefile]]

=item * [[Mojolicious::Command::Author::generate::plugin]]

=item * [[Mojolicious::Command::Author::inflate]]

=item * [[Mojolicious::Commands]]

=over 2

=item * [[Mojolicious::Command::Author::generate]]

=back

=back

=item * [[Mojolicious::Controller]]

=item * [[Mojolicious::Plugin]]

=over 2

=item * [[Mojolicious::Plugin::Config]]

=over 2

=item * [[Mojolicious::Plugin::JSONConfig]]

=back

=item * [[Mojolicious::Plugin::DefaultHelpers]]

=item * [[Mojolicious::Plugin::EPLRenderer]]

=over 2

=item * [[Mojolicious::Plugin::EPRenderer]]

=back

=item * [[Mojolicious::Plugin::HeaderCondition]]

=item * [[Mojolicious::Plugin::Mount]]

=item * [[Mojolicious::Plugin::TagHelpers]]

=back

=item * [[Mojolicious::Renderer]]

=item * [[Mojolicious::Routes::Match]]

=item * [[Mojolicious::Routes::Pattern]]

=item * [[Mojolicious::Routes::Route]]

=over 2

=item * [[Mojolicious::Routes]]

=back

=item * [[Mojolicious::Sessions]]

=item * [[Mojolicious::Static]]

=item * [[Mojolicious::Types]]

=item * [[Mojolicious::Validator]]

=item * [[Mojolicious::Validator::Validation]]

=item * [[Test::Mojo]]

=back

=item * [[Mojo::ByteStream]]

=item * [[Mojo::Collection]]

=item * [[Mojo::DynamicMethods]]

=item * [[Mojo::DOM]]

=item * [[Mojo::File]]

=over 2

=item * [[Mojo::Home]]

=back

=item * [[Mojo::JSON]]

=item * [[Mojo::Loader]]

=item * [[Mojo::Util]]

=item * [[Mojo::WebSocket]]

=item * [[ojo]]

=back

=head1 もっと詳しく

A lot more documentation and examples by many different authors can be found in
the [[Mojolicious wiki|http://github.com/mojolicious/mojo/wiki]].

=head1 サポート

本ドキュメントに書かれていないことで疑問があれば、
[[mailing list|http://groups.google.com/group/mojolicious]] かC<irc.freenode.net> (L<chat
now!|https://kiwiirc.com/nextclient/#irc://irc.freenode.net/mojo?nick=guest-?>)の公式IRCチャンネル C<#mojo> までお気軽に質問してください。

=cut
(Mojolicious 8.12を反映）
